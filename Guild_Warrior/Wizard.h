#pragma once
#include<iostream>
#include"Warrior.h"
using namespace std;

///////////////////////////////////////////////////////////////
//							class Wizard					 //
///////////////////////////////////////////////////////////////
class Wizard :public Warrior
{
	int mana;
public:
	///////////////////////////////////////////////////////////////
	//							get/set methods					 //
	///////////////////////////////////////////////////////////////
	int get_mana()const
	{
		return mana;
	}
	void set_mana(int mana)
	{
		this->mana = mana;
	}
	///////////////////////////////////////////////////////////////
	//							Constructors					 //
	///////////////////////////////////////////////////////////////
	Wizard(WARRIOR_TAKE_PARAMETERS, int mana) :Warrior(WARRIOR_GIVE_PARAMETERS)
	{
		set_mana(mana);
	}
	///////////////////////////////////////////////////////////////
	//							Methods							 //
	///////////////////////////////////////////////////////////////
	void attack(Warrior* target) override
	{
		int damage = base_attack;	//Волшебник бьёт базовой атакой, но имеет возможность восстанавливать здоровье за счёт вампиризма, так как наносит энергоурон
		if (mana > 0)
		{
			health += 1;	//Восстанавливаем хэпэшку, и забираем ману
			mana -= 1;
			cout << " Волшебник пускает магическую стрелу! 1HP восстановлено." << endl;
		}
		else	// В противном случае волшебник бьёт посохом, хп не регенирирует, ну и он будет понакаченее лучника, поэтому урона даже голым посохом будет столько же, 
			//для баланса у него сделаю меньше хп в сравнении с лучником
		{
			cout << " Волшебник атакует посохом." << endl;
		}
		target->take_damage(damage);	//Передал урон оппоненту
	}
	void use_ability(Warrior* target)override
	{
		int damage;
		if (target->is_alive() == false)	//Проверяем работоспособность врага
		{
			cout << "Нельзя атаковать мёртвого врага!" << endl;
			return;
		}
		if (mana >= 10)	//Если маны 10 и больше, то есть шанс на использование способности(вероятность реализую в функции дуэлей), 
			//после использования - забираю 10 маны у мага и исцеляю его на 10 очков здоровья(эквивалент 1 мана = 1 хп)
		{
			damage = base_attack * 2;
			health += 10;
			mana -= 10;
			cout << " Волшебник использует заклинание \"Огненный шар\"! 10HP Восстановлено. Нанесён удвоенный урон." << endl;
		}
		else	//В противном случае - используем простую базовую атаку с физ уроном и никакого вампиризма
		{
			damage = base_attack;
			cout << "Недостаточно маны для заклинания." << endl;
		}
		target->take_damage(damage);	//Передаём урон цели
	}
	virtual void info()const
	{
		Warrior::info();
		cout << "мана: " << mana << endl;
	}
};